// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdvertiseServiceRequest.proto

#ifndef PROTOBUF_INCLUDED_AdvertiseServiceRequest_2eproto
#define PROTOBUF_INCLUDED_AdvertiseServiceRequest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AdvertiseServiceRequest_2eproto 

namespace protobuf_AdvertiseServiceRequest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AdvertiseServiceRequest_2eproto
namespace mvsim_msgs {
class AdvertiseServiceRequest;
class AdvertiseServiceRequestDefaultTypeInternal;
extern AdvertiseServiceRequestDefaultTypeInternal _AdvertiseServiceRequest_default_instance_;
}  // namespace mvsim_msgs
namespace google {
namespace protobuf {
template<> ::mvsim_msgs::AdvertiseServiceRequest* Arena::CreateMaybeMessage<::mvsim_msgs::AdvertiseServiceRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mvsim_msgs {

// ===================================================================

class AdvertiseServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvsim_msgs.AdvertiseServiceRequest) */ {
 public:
  AdvertiseServiceRequest();
  virtual ~AdvertiseServiceRequest();

  AdvertiseServiceRequest(const AdvertiseServiceRequest& from);

  inline AdvertiseServiceRequest& operator=(const AdvertiseServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdvertiseServiceRequest(AdvertiseServiceRequest&& from) noexcept
    : AdvertiseServiceRequest() {
    *this = ::std::move(from);
  }

  inline AdvertiseServiceRequest& operator=(AdvertiseServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvertiseServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdvertiseServiceRequest* internal_default_instance() {
    return reinterpret_cast<const AdvertiseServiceRequest*>(
               &_AdvertiseServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AdvertiseServiceRequest* other);
  friend void swap(AdvertiseServiceRequest& a, AdvertiseServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdvertiseServiceRequest* New() const final {
    return CreateMaybeMessage<AdvertiseServiceRequest>(NULL);
  }

  AdvertiseServiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdvertiseServiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdvertiseServiceRequest& from);
  void MergeFrom(const AdvertiseServiceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdvertiseServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string serviceName = 1;
  bool has_servicename() const;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // required string inputTypeName = 2;
  bool has_inputtypename() const;
  void clear_inputtypename();
  static const int kInputTypeNameFieldNumber = 2;
  const ::std::string& inputtypename() const;
  void set_inputtypename(const ::std::string& value);
  #if LANG_CXX11
  void set_inputtypename(::std::string&& value);
  #endif
  void set_inputtypename(const char* value);
  void set_inputtypename(const char* value, size_t size);
  ::std::string* mutable_inputtypename();
  ::std::string* release_inputtypename();
  void set_allocated_inputtypename(::std::string* inputtypename);

  // required string outputTypeName = 3;
  bool has_outputtypename() const;
  void clear_outputtypename();
  static const int kOutputTypeNameFieldNumber = 3;
  const ::std::string& outputtypename() const;
  void set_outputtypename(const ::std::string& value);
  #if LANG_CXX11
  void set_outputtypename(::std::string&& value);
  #endif
  void set_outputtypename(const char* value);
  void set_outputtypename(const char* value, size_t size);
  ::std::string* mutable_outputtypename();
  ::std::string* release_outputtypename();
  void set_allocated_outputtypename(::std::string* outputtypename);

  // required string endpoint = 4;
  bool has_endpoint() const;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 4;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // required string nodeName = 5;
  bool has_nodename() const;
  void clear_nodename();
  static const int kNodeNameFieldNumber = 5;
  const ::std::string& nodename() const;
  void set_nodename(const ::std::string& value);
  #if LANG_CXX11
  void set_nodename(::std::string&& value);
  #endif
  void set_nodename(const char* value);
  void set_nodename(const char* value, size_t size);
  ::std::string* mutable_nodename();
  ::std::string* release_nodename();
  void set_allocated_nodename(::std::string* nodename);

  // @@protoc_insertion_point(class_scope:mvsim_msgs.AdvertiseServiceRequest)
 private:
  void set_has_servicename();
  void clear_has_servicename();
  void set_has_inputtypename();
  void clear_has_inputtypename();
  void set_has_outputtypename();
  void clear_has_outputtypename();
  void set_has_endpoint();
  void clear_has_endpoint();
  void set_has_nodename();
  void clear_has_nodename();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr inputtypename_;
  ::google::protobuf::internal::ArenaStringPtr outputtypename_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::internal::ArenaStringPtr nodename_;
  friend struct ::protobuf_AdvertiseServiceRequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdvertiseServiceRequest

// required string serviceName = 1;
inline bool AdvertiseServiceRequest::has_servicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdvertiseServiceRequest::set_has_servicename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdvertiseServiceRequest::clear_has_servicename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdvertiseServiceRequest::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servicename();
}
inline const ::std::string& AdvertiseServiceRequest::servicename() const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.AdvertiseServiceRequest.serviceName)
  return servicename_.GetNoArena();
}
inline void AdvertiseServiceRequest::set_servicename(const ::std::string& value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvsim_msgs.AdvertiseServiceRequest.serviceName)
}
#if LANG_CXX11
inline void AdvertiseServiceRequest::set_servicename(::std::string&& value) {
  set_has_servicename();
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mvsim_msgs.AdvertiseServiceRequest.serviceName)
}
#endif
inline void AdvertiseServiceRequest::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.AdvertiseServiceRequest.serviceName)
}
inline void AdvertiseServiceRequest::set_servicename(const char* value, size_t size) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.AdvertiseServiceRequest.serviceName)
}
inline ::std::string* AdvertiseServiceRequest::mutable_servicename() {
  set_has_servicename();
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.AdvertiseServiceRequest.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdvertiseServiceRequest::release_servicename() {
  // @@protoc_insertion_point(field_release:mvsim_msgs.AdvertiseServiceRequest.serviceName)
  if (!has_servicename()) {
    return NULL;
  }
  clear_has_servicename();
  return servicename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdvertiseServiceRequest::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    set_has_servicename();
  } else {
    clear_has_servicename();
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:mvsim_msgs.AdvertiseServiceRequest.serviceName)
}

// required string inputTypeName = 2;
inline bool AdvertiseServiceRequest::has_inputtypename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdvertiseServiceRequest::set_has_inputtypename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdvertiseServiceRequest::clear_has_inputtypename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdvertiseServiceRequest::clear_inputtypename() {
  inputtypename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inputtypename();
}
inline const ::std::string& AdvertiseServiceRequest::inputtypename() const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
  return inputtypename_.GetNoArena();
}
inline void AdvertiseServiceRequest::set_inputtypename(const ::std::string& value) {
  set_has_inputtypename();
  inputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
}
#if LANG_CXX11
inline void AdvertiseServiceRequest::set_inputtypename(::std::string&& value) {
  set_has_inputtypename();
  inputtypename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
}
#endif
inline void AdvertiseServiceRequest::set_inputtypename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inputtypename();
  inputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
}
inline void AdvertiseServiceRequest::set_inputtypename(const char* value, size_t size) {
  set_has_inputtypename();
  inputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
}
inline ::std::string* AdvertiseServiceRequest::mutable_inputtypename() {
  set_has_inputtypename();
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
  return inputtypename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdvertiseServiceRequest::release_inputtypename() {
  // @@protoc_insertion_point(field_release:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
  if (!has_inputtypename()) {
    return NULL;
  }
  clear_has_inputtypename();
  return inputtypename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdvertiseServiceRequest::set_allocated_inputtypename(::std::string* inputtypename) {
  if (inputtypename != NULL) {
    set_has_inputtypename();
  } else {
    clear_has_inputtypename();
  }
  inputtypename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inputtypename);
  // @@protoc_insertion_point(field_set_allocated:mvsim_msgs.AdvertiseServiceRequest.inputTypeName)
}

// required string outputTypeName = 3;
inline bool AdvertiseServiceRequest::has_outputtypename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdvertiseServiceRequest::set_has_outputtypename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdvertiseServiceRequest::clear_has_outputtypename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdvertiseServiceRequest::clear_outputtypename() {
  outputtypename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_outputtypename();
}
inline const ::std::string& AdvertiseServiceRequest::outputtypename() const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
  return outputtypename_.GetNoArena();
}
inline void AdvertiseServiceRequest::set_outputtypename(const ::std::string& value) {
  set_has_outputtypename();
  outputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
}
#if LANG_CXX11
inline void AdvertiseServiceRequest::set_outputtypename(::std::string&& value) {
  set_has_outputtypename();
  outputtypename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
}
#endif
inline void AdvertiseServiceRequest::set_outputtypename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_outputtypename();
  outputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
}
inline void AdvertiseServiceRequest::set_outputtypename(const char* value, size_t size) {
  set_has_outputtypename();
  outputtypename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
}
inline ::std::string* AdvertiseServiceRequest::mutable_outputtypename() {
  set_has_outputtypename();
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
  return outputtypename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdvertiseServiceRequest::release_outputtypename() {
  // @@protoc_insertion_point(field_release:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
  if (!has_outputtypename()) {
    return NULL;
  }
  clear_has_outputtypename();
  return outputtypename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdvertiseServiceRequest::set_allocated_outputtypename(::std::string* outputtypename) {
  if (outputtypename != NULL) {
    set_has_outputtypename();
  } else {
    clear_has_outputtypename();
  }
  outputtypename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outputtypename);
  // @@protoc_insertion_point(field_set_allocated:mvsim_msgs.AdvertiseServiceRequest.outputTypeName)
}

// required string endpoint = 4;
inline bool AdvertiseServiceRequest::has_endpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdvertiseServiceRequest::set_has_endpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdvertiseServiceRequest::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdvertiseServiceRequest::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_endpoint();
}
inline const ::std::string& AdvertiseServiceRequest::endpoint() const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.AdvertiseServiceRequest.endpoint)
  return endpoint_.GetNoArena();
}
inline void AdvertiseServiceRequest::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvsim_msgs.AdvertiseServiceRequest.endpoint)
}
#if LANG_CXX11
inline void AdvertiseServiceRequest::set_endpoint(::std::string&& value) {
  set_has_endpoint();
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mvsim_msgs.AdvertiseServiceRequest.endpoint)
}
#endif
inline void AdvertiseServiceRequest::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.AdvertiseServiceRequest.endpoint)
}
inline void AdvertiseServiceRequest::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.AdvertiseServiceRequest.endpoint)
}
inline ::std::string* AdvertiseServiceRequest::mutable_endpoint() {
  set_has_endpoint();
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.AdvertiseServiceRequest.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdvertiseServiceRequest::release_endpoint() {
  // @@protoc_insertion_point(field_release:mvsim_msgs.AdvertiseServiceRequest.endpoint)
  if (!has_endpoint()) {
    return NULL;
  }
  clear_has_endpoint();
  return endpoint_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdvertiseServiceRequest::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    set_has_endpoint();
  } else {
    clear_has_endpoint();
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:mvsim_msgs.AdvertiseServiceRequest.endpoint)
}

// required string nodeName = 5;
inline bool AdvertiseServiceRequest::has_nodename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AdvertiseServiceRequest::set_has_nodename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AdvertiseServiceRequest::clear_has_nodename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AdvertiseServiceRequest::clear_nodename() {
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nodename();
}
inline const ::std::string& AdvertiseServiceRequest::nodename() const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.AdvertiseServiceRequest.nodeName)
  return nodename_.GetNoArena();
}
inline void AdvertiseServiceRequest::set_nodename(const ::std::string& value) {
  set_has_nodename();
  nodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvsim_msgs.AdvertiseServiceRequest.nodeName)
}
#if LANG_CXX11
inline void AdvertiseServiceRequest::set_nodename(::std::string&& value) {
  set_has_nodename();
  nodename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mvsim_msgs.AdvertiseServiceRequest.nodeName)
}
#endif
inline void AdvertiseServiceRequest::set_nodename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nodename();
  nodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.AdvertiseServiceRequest.nodeName)
}
inline void AdvertiseServiceRequest::set_nodename(const char* value, size_t size) {
  set_has_nodename();
  nodename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.AdvertiseServiceRequest.nodeName)
}
inline ::std::string* AdvertiseServiceRequest::mutable_nodename() {
  set_has_nodename();
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.AdvertiseServiceRequest.nodeName)
  return nodename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdvertiseServiceRequest::release_nodename() {
  // @@protoc_insertion_point(field_release:mvsim_msgs.AdvertiseServiceRequest.nodeName)
  if (!has_nodename()) {
    return NULL;
  }
  clear_has_nodename();
  return nodename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdvertiseServiceRequest::set_allocated_nodename(::std::string* nodename) {
  if (nodename != NULL) {
    set_has_nodename();
  } else {
    clear_has_nodename();
  }
  nodename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodename);
  // @@protoc_insertion_point(field_set_allocated:mvsim_msgs.AdvertiseServiceRequest.nodeName)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mvsim_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AdvertiseServiceRequest_2eproto
