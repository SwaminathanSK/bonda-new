// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetServiceInfoRequest.proto

#include "GetServiceInfoRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace mvsim_msgs {
class GetServiceInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceInfoRequest>
      _instance;
} _GetServiceInfoRequest_default_instance_;
}  // namespace mvsim_msgs
namespace protobuf_GetServiceInfoRequest_2eproto {
static void InitDefaultsGetServiceInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mvsim_msgs::_GetServiceInfoRequest_default_instance_;
    new (ptr) ::mvsim_msgs::GetServiceInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mvsim_msgs::GetServiceInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetServiceInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetServiceInfoRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetServiceInfoRequest.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mvsim_msgs::GetServiceInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mvsim_msgs::GetServiceInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mvsim_msgs::GetServiceInfoRequest, servicename_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::mvsim_msgs::GetServiceInfoRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mvsim_msgs::_GetServiceInfoRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GetServiceInfoRequest.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033GetServiceInfoRequest.proto\022\nmvsim_msg"
      "s\",\n\025GetServiceInfoRequest\022\023\n\013serviceNam"
      "e\030\001 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 87);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GetServiceInfoRequest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GetServiceInfoRequest_2eproto
namespace mvsim_msgs {

// ===================================================================

void GetServiceInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceInfoRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceInfoRequest::GetServiceInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GetServiceInfoRequest_2eproto::scc_info_GetServiceInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mvsim_msgs.GetServiceInfoRequest)
}
GetServiceInfoRequest::GetServiceInfoRequest(const GetServiceInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_servicename()) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  // @@protoc_insertion_point(copy_constructor:mvsim_msgs.GetServiceInfoRequest)
}

void GetServiceInfoRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetServiceInfoRequest::~GetServiceInfoRequest() {
  // @@protoc_insertion_point(destructor:mvsim_msgs.GetServiceInfoRequest)
  SharedDtor();
}

void GetServiceInfoRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetServiceInfoRequest::descriptor() {
  ::protobuf_GetServiceInfoRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetServiceInfoRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceInfoRequest& GetServiceInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GetServiceInfoRequest_2eproto::scc_info_GetServiceInfoRequest.base);
  return *internal_default_instance();
}


void GetServiceInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mvsim_msgs.GetServiceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    servicename_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetServiceInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mvsim_msgs.GetServiceInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mvsim_msgs.GetServiceInfoRequest.serviceName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mvsim_msgs.GetServiceInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mvsim_msgs.GetServiceInfoRequest)
  return false;
#undef DO_
}

void GetServiceInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mvsim_msgs.GetServiceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string serviceName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mvsim_msgs.GetServiceInfoRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mvsim_msgs.GetServiceInfoRequest)
}

::google::protobuf::uint8* GetServiceInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mvsim_msgs.GetServiceInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string serviceName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mvsim_msgs.GetServiceInfoRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mvsim_msgs.GetServiceInfoRequest)
  return target;
}

size_t GetServiceInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mvsim_msgs.GetServiceInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string serviceName = 1;
  if (has_servicename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servicename());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mvsim_msgs.GetServiceInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mvsim_msgs.GetServiceInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mvsim_msgs.GetServiceInfoRequest)
    MergeFrom(*source);
  }
}

void GetServiceInfoRequest::MergeFrom(const GetServiceInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mvsim_msgs.GetServiceInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_servicename()) {
    set_has_servicename();
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
}

void GetServiceInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mvsim_msgs.GetServiceInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceInfoRequest::CopyFrom(const GetServiceInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mvsim_msgs.GetServiceInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetServiceInfoRequest::Swap(GetServiceInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceInfoRequest::InternalSwap(GetServiceInfoRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetServiceInfoRequest::GetMetadata() const {
  protobuf_GetServiceInfoRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GetServiceInfoRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mvsim_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mvsim_msgs::GetServiceInfoRequest* Arena::CreateMaybeMessage< ::mvsim_msgs::GetServiceInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mvsim_msgs::GetServiceInfoRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
