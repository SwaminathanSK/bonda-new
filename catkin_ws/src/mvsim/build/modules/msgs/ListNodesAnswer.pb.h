// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ListNodesAnswer.proto

#ifndef PROTOBUF_INCLUDED_ListNodesAnswer_2eproto
#define PROTOBUF_INCLUDED_ListNodesAnswer_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ListNodesAnswer_2eproto 

namespace protobuf_ListNodesAnswer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ListNodesAnswer_2eproto
namespace mvsim_msgs {
class ListNodesAnswer;
class ListNodesAnswerDefaultTypeInternal;
extern ListNodesAnswerDefaultTypeInternal _ListNodesAnswer_default_instance_;
}  // namespace mvsim_msgs
namespace google {
namespace protobuf {
template<> ::mvsim_msgs::ListNodesAnswer* Arena::CreateMaybeMessage<::mvsim_msgs::ListNodesAnswer>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mvsim_msgs {

// ===================================================================

class ListNodesAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvsim_msgs.ListNodesAnswer) */ {
 public:
  ListNodesAnswer();
  virtual ~ListNodesAnswer();

  ListNodesAnswer(const ListNodesAnswer& from);

  inline ListNodesAnswer& operator=(const ListNodesAnswer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListNodesAnswer(ListNodesAnswer&& from) noexcept
    : ListNodesAnswer() {
    *this = ::std::move(from);
  }

  inline ListNodesAnswer& operator=(ListNodesAnswer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListNodesAnswer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListNodesAnswer* internal_default_instance() {
    return reinterpret_cast<const ListNodesAnswer*>(
               &_ListNodesAnswer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ListNodesAnswer* other);
  friend void swap(ListNodesAnswer& a, ListNodesAnswer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListNodesAnswer* New() const final {
    return CreateMaybeMessage<ListNodesAnswer>(NULL);
  }

  ListNodesAnswer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListNodesAnswer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListNodesAnswer& from);
  void MergeFrom(const ListNodesAnswer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListNodesAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  const ::std::string& nodes(int index) const;
  ::std::string* mutable_nodes(int index);
  void set_nodes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_nodes(int index, ::std::string&& value);
  #endif
  void set_nodes(int index, const char* value);
  void set_nodes(int index, const char* value, size_t size);
  ::std::string* add_nodes();
  void add_nodes(const ::std::string& value);
  #if LANG_CXX11
  void add_nodes(::std::string&& value);
  #endif
  void add_nodes(const char* value);
  void add_nodes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& nodes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_nodes();

  // @@protoc_insertion_point(class_scope:mvsim_msgs.ListNodesAnswer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> nodes_;
  friend struct ::protobuf_ListNodesAnswer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListNodesAnswer

// repeated string nodes = 1;
inline int ListNodesAnswer::nodes_size() const {
  return nodes_.size();
}
inline void ListNodesAnswer::clear_nodes() {
  nodes_.Clear();
}
inline const ::std::string& ListNodesAnswer::nodes(int index) const {
  // @@protoc_insertion_point(field_get:mvsim_msgs.ListNodesAnswer.nodes)
  return nodes_.Get(index);
}
inline ::std::string* ListNodesAnswer::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:mvsim_msgs.ListNodesAnswer.nodes)
  return nodes_.Mutable(index);
}
inline void ListNodesAnswer::set_nodes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mvsim_msgs.ListNodesAnswer.nodes)
  nodes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListNodesAnswer::set_nodes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mvsim_msgs.ListNodesAnswer.nodes)
  nodes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListNodesAnswer::set_nodes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  nodes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mvsim_msgs.ListNodesAnswer.nodes)
}
inline void ListNodesAnswer::set_nodes(int index, const char* value, size_t size) {
  nodes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mvsim_msgs.ListNodesAnswer.nodes)
}
inline ::std::string* ListNodesAnswer::add_nodes() {
  // @@protoc_insertion_point(field_add_mutable:mvsim_msgs.ListNodesAnswer.nodes)
  return nodes_.Add();
}
inline void ListNodesAnswer::add_nodes(const ::std::string& value) {
  nodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mvsim_msgs.ListNodesAnswer.nodes)
}
#if LANG_CXX11
inline void ListNodesAnswer::add_nodes(::std::string&& value) {
  nodes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mvsim_msgs.ListNodesAnswer.nodes)
}
#endif
inline void ListNodesAnswer::add_nodes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  nodes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mvsim_msgs.ListNodesAnswer.nodes)
}
inline void ListNodesAnswer::add_nodes(const char* value, size_t size) {
  nodes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mvsim_msgs.ListNodesAnswer.nodes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListNodesAnswer::nodes() const {
  // @@protoc_insertion_point(field_list:mvsim_msgs.ListNodesAnswer.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListNodesAnswer::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:mvsim_msgs.ListNodesAnswer.nodes)
  return &nodes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mvsim_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ListNodesAnswer_2eproto
